import Image from "next/image";
import React from "react";
import Analytics from "./Analytics";

const Dashboard = ({
  vendors,
  products,
  allUsers,
  allOrders,
  sellerOrders,
  totalOrderAmount,
}) => {
  const cards = [];
  if (allOrders) {
    cards.push({
      image: (
        <svg
          xmlns="http://www.w3.org/2000/svg"
          width={70}
          height={70}
          viewBox="0 0 24 24"
          fill="none"
          className="fill-current text-blueGray-200"
        >
          <path
            opacity="0.32"
            d="M3.41016 2.00012C2.71981 2.00012 2.16016 2.55977 2.16016 3.25012C2.16016 3.94048 2.71981 4.50012 3.41016 4.50012H4.25251C4.48986 4.50012 4.69436 4.66605 4.74281 4.89837C4.96591 5.96777 5.59766 8.95907 6.10461 11.0001C6.73135 13.5236 7.29935 15.342 7.6574 16.4029C8.09928 16.1467 8.61259 16 9.16016 16C10.446 16 11.5429 16.809 11.9697 17.9457C12.7178 17.9791 13.5912 18.0001 14.6046 18.0001C15.462 18.0001 16.2042 17.9851 16.8452 17.9602C17.2681 16.8159 18.3689 16 19.6602 16C20.2143 16 20.7334 16.1503 21.1789 16.4123C21.5323 15.5226 22.0073 14.0331 22.4102 11.7501C22.6992 10.1123 22.8768 8.88287 22.986 7.99032C23.1201 6.89392 22.2647 6.00012 21.1602 6.00012H7.66016L7.03891 3.51505C6.81631 2.62472 6.01636 2.00012 5.09861 2.00012H3.41016Z"
          />
          <path d="M17.5505 10.5941C17.6091 10.0083 17.1491 9.5 16.5604 9.5C16.0492 9.5 15.6212 9.88735 15.5703 10.3961L15.2694 13.4059C15.2108 13.9917 15.6708 14.5 16.2595 14.5C16.7707 14.5 17.1987 14.1126 17.2496 13.6039L17.5505 10.5941Z" />
          <path d="M12.7496 10.3961C12.6987 9.88735 12.2707 9.5 11.7595 9.5C11.1708 9.5 10.7108 10.0083 10.7694 10.5941L11.0703 13.6039C11.1212 14.1126 11.5492 14.5 12.0604 14.5C12.6491 14.5 13.1091 13.9917 13.0505 13.4059L12.7496 10.3961Z" />
          <path d="M16.6602 19C16.6602 20.6569 18.0033 22 19.6602 22C21.317 22 22.6602 20.6569 22.6602 19C22.6602 17.3432 21.317 16 19.6602 16C18.0033 16 16.6602 17.3432 16.6602 19Z" />
          <path d="M6.16016 19C6.16016 20.6569 7.50331 22 9.16016 22C10.817 22 12.1602 20.6569 12.1602 19C12.1602 17.3432 10.817 16 9.16016 16C7.50331 16 6.16016 17.3432 6.16016 19Z" />
        </svg>
      ),
      count: allOrders?.toString()?.padStart(2, "0") || "00",
      title: "Total Orders",
    });
  }
  if (allUsers) {
    cards.push({
      image: (
        <svg
          xmlns="http://www.w3.org/2000/svg"
          width={70}
          height={70}
          viewBox="0 0 24 24"
          fill="none"
          className="fill-current text-blueGray-200"
        >
          <path
            opacity="0.32"
            d="M2.28099 19.6575C2.36966 20.5161 2.93261 21.1957 3.77688 21.3755C5.1095 21.6592 7.6216 22 12 22C16.3784 22 18.8905 21.6592 20.2232 21.3755C21.0674 21.1957 21.6303 20.5161 21.719 19.6575C21.8505 18.3844 22 16.0469 22 12C22 7.95305 21.8505 5.6156 21.719 4.34251C21.6303 3.48389 21.0674 2.80424 20.2231 2.62451C18.8905 2.34081 16.3784 2 12 2C7.6216 2 5.1095 2.34081 3.77688 2.62451C2.93261 2.80424 2.36966 3.48389 2.28099 4.34251C2.14952 5.6156 2 7.95305 2 12C2 16.0469 2.14952 18.3844 2.28099 19.6575Z"
          />
          <path d="M13.9382 13.8559C15.263 13.1583 16.1663 11.7679 16.1663 10.1666C16.1663 7.8655 14.3008 6 11.9996 6C9.69841 6 7.83291 7.8655 7.83291 10.1666C7.83291 11.768 8.73626 13.1584 10.0612 13.856C8.28691 14.532 6.93216 16.1092 6.51251 18.0529C6.45446 18.3219 6.60246 18.5981 6.87341 18.6471C7.84581 18.8231 9.45616 19 12.0006 19C14.545 19 16.1554 18.8231 17.1278 18.6471C17.3977 18.5983 17.5454 18.3231 17.4876 18.0551C17.0685 16.1103 15.7133 14.5321 13.9382 13.8559Z" />
        </svg>
      ),
      count: allUsers?.toString()?.padStart(2, "0") || "00",
      title: "Total Users",
    });
  }
  if (vendors) {
    cards.push({
      image: (
        <svg
          xmlns="http://www.w3.org/2000/svg"
          width={70}
          height={70}
          viewBox="0 0 24 24"
          fill="none"
          className="fill-current text-blueGray-200"
        >
          <path
            opacity="0.32"
            d="M3.41016 2.00012C2.71981 2.00012 2.16016 2.55977 2.16016 3.25012C2.16016 3.94048 2.71981 4.50012 3.41016 4.50012H4.25251C4.48986 4.50012 4.69436 4.66605 4.74281 4.89837C4.96591 5.96777 5.59766 8.95907 6.10461 11.0001C6.73135 13.5236 7.29935 15.342 7.6574 16.4029C8.09928 16.1467 8.61259 16 9.16016 16C10.446 16 11.5429 16.809 11.9697 17.9457C12.7178 17.9791 13.5912 18.0001 14.6046 18.0001C15.462 18.0001 16.2042 17.9851 16.8452 17.9602C17.2681 16.8159 18.3689 16 19.6602 16C20.2143 16 20.7334 16.1503 21.1789 16.4123C21.5323 15.5226 22.0073 14.0331 22.4102 11.7501C22.6992 10.1123 22.8768 8.88287 22.986 7.99032C23.1201 6.89392 22.2647 6.00012 21.1602 6.00012H7.66016L7.03891 3.51505C6.81631 2.62472 6.01636 2.00012 5.09861 2.00012H3.41016Z"
          />
          <path d="M17.5505 10.5941C17.6091 10.0083 17.1491 9.5 16.5604 9.5C16.0492 9.5 15.6212 9.88735 15.5703 10.3961L15.2694 13.4059C15.2108 13.9917 15.6708 14.5 16.2595 14.5C16.7707 14.5 17.1987 14.1126 17.2496 13.6039L17.5505 10.5941Z" />
          <path d="M12.7496 10.3961C12.6987 9.88735 12.2707 9.5 11.7595 9.5C11.1708 9.5 10.7108 10.0083 10.7694 10.5941L11.0703 13.6039C11.1212 14.1126 11.5492 14.5 12.0604 14.5C12.6491 14.5 13.1091 13.9917 13.0505 13.4059L12.7496 10.3961Z" />
          <path d="M16.6602 19C16.6602 20.6569 18.0033 22 19.6602 22C21.317 22 22.6602 20.6569 22.6602 19C22.6602 17.3432 21.317 16 19.6602 16C18.0033 16 16.6602 17.3432 16.6602 19Z" />
          <path d="M6.16016 19C6.16016 20.6569 7.50331 22 9.16016 22C10.817 22 12.1602 20.6569 12.1602 19C12.1602 17.3432 10.817 16 9.16016 16C7.50331 16 6.16016 17.3432 6.16016 19Z" />
        </svg>
      ),
      count: vendors?.toString()?.padStart(2, "0") || "00",
      title: "Total Vendors",
    });
  }
  if (sellerOrders) {
    cards.push({
      image: (
        <svg
          xmlns="http://www.w3.org/2000/svg"
          id="Layer_1"
          width={70}
          height={70}
          data-name="Layer 1"
          viewBox="0 -2 26 30"
          className="fill-current text-blueGray-200"
        >
          <path d="m4,14.949v5.551c0,.276.224.5.5.5h7.5v3h-7.5c-1.93,0-3.5-1.57-3.5-3.5v-7.206c-.616-.77-1-1.733-1-2.794l.036-.325L2.297,0h19.406l2.297,10.5c0,.798-.226,1.537-.592,2.187-.537-1.021-1.398-1.846-2.469-2.296l-1.643-7.391h-2.297v3h-3v-3h-4v3h-3v-3h-2.297l-1.697,7.637c.069.763.713,1.363,1.494,1.363h1c.651,0,1.201-.419,1.408-1h3.184c.207.581.757,1,1.408,1h1c.651,0,1.201-.419,1.408-1h2.12c-1.147.857-1.912,2.191-2,3.715-.479.175-.99.285-1.529.285h-1c-1.157,0-2.202-.451-3-1.17-.798.72-1.843,1.17-3,1.17h-1c-.171,0-.334-.032-.5-.051Zm17,4.051h-4c-1.654,0-3,1.346-3,3v2h10v-2c0-1.654-1.346-3-3-3Zm-5-4c0,1.654,1.346,3,3,3s3-1.346,3-3-1.346-3-3-3-3,1.346-3,3Z" />
        </svg>
      ),
      count: String(sellerOrders)?.padStart(2, "0") || "00",
      title: "Total Orders",
    });
  }
  if (totalOrderAmount) {
    cards.push({
      image: (
        <svg
          xmlns="http://www.w3.org/2000/svg"
          id="Layer_1"
          width={70}
          height={70}
          data-name="Layer 1"
          viewBox="0 -2 26 30"
          className="fill-current text-blueGray-200"
        >
          <path d="m4,14.949v5.551c0,.276.224.5.5.5h7.5v3h-7.5c-1.93,0-3.5-1.57-3.5-3.5v-7.206c-.616-.77-1-1.733-1-2.794l.036-.325L2.297,0h19.406l2.297,10.5c0,.798-.226,1.537-.592,2.187-.537-1.021-1.398-1.846-2.469-2.296l-1.643-7.391h-2.297v3h-3v-3h-4v3h-3v-3h-2.297l-1.697,7.637c.069.763.713,1.363,1.494,1.363h1c.651,0,1.201-.419,1.408-1h3.184c.207.581.757,1,1.408,1h1c.651,0,1.201-.419,1.408-1h2.12c-1.147.857-1.912,2.191-2,3.715-.479.175-.99.285-1.529.285h-1c-1.157,0-2.202-.451-3-1.17-.798.72-1.843,1.17-3,1.17h-1c-.171,0-.334-.032-.5-.051Zm17,4.051h-4c-1.654,0-3,1.346-3,3v2h10v-2c0-1.654-1.346-3-3-3Zm-5-4c0,1.654,1.346,3,3,3s3-1.346,3-3-1.346-3-3-3-3,1.346-3,3Z" />
        </svg>
      ),
      count: String(totalOrderAmount)?.padStart(2, "0") || "00",
      title: "Total Amount",
    });
  }

  cards.push({
    image: (
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width={70}
        height={70}
        viewBox="-2 -2 50 50"
        className="fill-current text-blueGray-200"
      >
        <g
          fill="none"
          stroke="currentColor"
          strokeLinejoin="round"
          strokeWidth={4}
        >
          <path d="M44 14L24 4L4 14v20l20 10l20-10z"></path>
          <path
            strokeLinecap="round"
            d="m4 14l20 10m0 20V24m20-10L24 24M34 9L14 19"
          ></path>
        </g>
      </svg>
    ),
    count: products?.toString()?.padStart(2, "0") || "00",
    title: "Total Products",
  });
  return (
    <main>
      <div>
        <div className="flex items-center gap-5 mb-5">
          {cards.map((card, index) => (
            <div
              key={index}
              className="flex shadow bg-white px-10 py-8 items-center gap-5 rounded-xl md:w-4/12 w-full border border-[#cfd8dc]"
            >
              <div>
                {typeof card.image === "string" ? (
                  <Image
                    src={card.image}
                    alt="Glass bag"
                    width={70}
                    height={70}
                  />
                ) : (
                  card.image
                )}
              </div>
              <div className="flex flex-col gap-1">
                <h4 className="text-2xl font-bold">{card.count ?? "00"}</h4>
                <h6 className="text-[#919EAB] font-bold text-sm tracking-wide">
                  {card.title}
                </h6>
              </div>
            </div>
          ))}
        </div>
        <Analytics />
      </div>
    </main>
  );
};

export default Dashboard;
